version: '3.9'
services:
  # Serviço PostgreSQL
  postgres:
    build:
      context: ./db-relacional
    container_name: postgres_db
    environment:
      POSTGRES_USER: user           # Nome do usuário padrão
      POSTGRES_PASSWORD: senha      # Senha do usuário
      POSTGRES_DB: database         # Nome do banco de dados padrão
    ports:
      - "5432:5432"                 # Porta padrão do PostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persistência dos dados
      - ./db-relacional/init.sql:/docker-entrypoint-initdb.d/init.sql # Script SQL personalizado

  # Serviço pgAdmin (Gerenciador de PostgreSQL)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com # Usuário do pgAdmin
      PGADMIN_DEFAULT_PASSWORD: admin         # Senha do pgAdmin
    ports:
      - "5050:80"                             # Porta 5050 para acessar o pgAdmin no navegador
    depends_on:
      - postgres

  # Serviço MongoDB
  mongo:
    build:
    image: mongo:6
    container_name: mongo_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: pass
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin # Aqui o usuário deve ser o mesmo que o do MongoDB
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass # A senha também precisa ser a mesma
      ME_CONFIG_MONGODB_SERVER: mongo       # Nome do serviço Mongo no docker-compose
    ports:
      - "8081:8081"
    depends_on:
      - mongo

volumes:
  postgres_data: # Volume para persistir os dados do PostgreSQL
  mongo_data:    # Volume para persistir os dados do MongoDB